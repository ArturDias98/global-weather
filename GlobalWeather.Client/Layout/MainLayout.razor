@using System.Security.Claims
@using GlobalWeather.Client.Services
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@using static GlobalWeather.Client.ServerHelper;

@inherits LayoutComponentBase

@inject AuthService AuthService
@inject IDialogService DialogService
@inject IWebAssemblyHostEnvironment Environment

<MudThemeProvider IsDarkMode="true"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudButton Variant="Variant.Text"
                   Href="/">
            <MudText Typo="Typo.h5" Class="ml-3">GloboClima</MudText>
        </MudButton>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub"
                       Href="https://github.com/ArturDias98/global-weather"
                       Target="_blank">
        </MudIconButton>
        <MudTooltip Text="Api">
            <MudIconButton Icon="@Icons.Material.Outlined.Api"
                           Href="@($"{GetServerUrl(Environment)}swagger")"
                           Target="_blank">
            </MudIconButton>
        </MudTooltip>
        <AuthorizeView>
            <Authorized>
                <MudTooltip Text="@(GetUserEmail(context.User))">
                    <MudIconButton Icon="@Icons.Material.Outlined.Person">
                    </MudIconButton>
                </MudTooltip>
                <MudTooltip Text="Logout">
                    <MudIconButton Icon="@Icons.Material.Outlined.Logout"
                                   OnClick="LogOutAsync">
                    </MudIconButton>
                </MudTooltip>
            </Authorized>
            <NotAuthorized>
                <MudTooltip Text="Login">
                    <MudIconButton Icon="@Icons.Material.Outlined.Login"
                                   OnClick="LoginAsync">
                    </MudIconButton>
                </MudTooltip>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code{

    private static string GetUserEmail(ClaimsPrincipal claims)
    {
        var email = claims.FindFirst(i => i.Type == "email");

        return email!.Value;
    }

    private async Task LoginAsync()
    {
        var options = new DialogOptions()
        {
            CloseButton = true,
            MaxWidth = MaxWidth.ExtraSmall,
            FullWidth = true
        };

        await DialogService.ShowAsync<LoginDialog>(
            "Login",
            options);
    }

    private async Task LogOutAsync()
    {
        await AuthService.ClearAsync();
    }

}